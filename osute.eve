== Draw control panel ==
```
match
  [#session-connect]
commit
  [#div sort: 2 class: "controls"
    children: [#input
      sort: 1
      value: "focus here to move"
      style: [display: "block" margin: "1em 0"]]
    children: [#textarea
      sort: 2
      name: "level"
      style: [margin-right: "1em"]]
    children: [#button
      sort: 3
      name: "load"
      text: "Load/reset"
      style: [vertical-align: "bottom" margin-top: "1em"]]]
```
== Reset/map loading ==
Reset
```
match
  [#click element: [#button name: "load"]]
commit
  [#loading stage: 1]
```
```
match
  [#loading stage: 1]
  thing = [#cell]
commit
  thing += #deleted
```
```
match
  [#loading stage: 1]
  thing = [#player]
commit
  thing += #deleted
```
```
match
  [#loading stage: 1]
  thing = [#wall]
commit
  thing += #deleted
```
```
match
  [#loading stage: 1]
  thing = [#box]
commit
  thing += #deleted
```
```
match
  [#loading stage: 1]
  thing = [#goal]
commit
  thing += #deleted
```
```
match
  loading = [#loading stage: 1]
  not([#cell not(#deleted)])
  not([#player not(#deleted)])
  not([#wall not(#deleted)])
  not([#box not(#deleted)])
  not([#goal not(#deleted)])
commit
  loading.stage := 2
```
Map loading
```
match
  loading = [#loading stage: 2]
  [#textarea name: "level" value: level]
  split[text: level, by: "\n" index: y token: line]
  split[text: line, by: "" index: x token: char]
  tag = if char = "@" then "player"
        else if char = "#" then "wall"
        else if char = "$" then "box"
        else if char = "." then "goal"
        else "cell"
commit
  [tag x y]
  [#cell x y]
  loading.stage := 3
```
== Decoding keypresses ==
Note that is quite reusable
```
match
  [#session-connect]
  left = 37
  up = 38
  right = 39
  down = 40
commit
  [#move-templ keycode: left  y-change:  0 x-change: -1]
  [#move-templ keycode: up    y-change: -1 x-change:  0]
  [#move-templ keycode: right y-change:  0 x-change:  1]
  [#move-templ keycode: down  y-change:  1 x-change:  0]
```
```
match
  [#move-templ keycode y-change x-change]
  [#keydown key: keycode]
bind
  [#move x-change y-change]
```
== Game logic ==
Walking into an empty space
```
match
  [#move x-change y-change]
  player = [#player x y not(#deleted)]
  new-x = x + x-change
  new-y = y + y-change
  not([#box x: new-x y: new-y not(#deleted)])
  not([#wall x: new-x y: new-y not(#deleted)])
commit
  player.x := new-x
  player.y := new-y
```
Pushing a box
```
match
  [#move y-change x-change]
  player = [#player x y not(#deleted)]
  new-x = x + x-change
  new-y = y + y-change
  box = [#box x: new-x y: new-y not(#deleted)]
  new-box-x = new-x + x-change
  new-box-y = new-y + y-change
  not([#box x: new-box-x y: new-box-y not(#deleted)])
  not([#wall x: new-box-x y: new-box-y not(#deleted)])
commit
  player.x := new-x
  player.y := new-y
  box.x := new-box-x
  box.y := new-box-y
```
Win condition
```
match
  box = [#box x y not(#deleted)]
  not([#goal x y not(#deleted)])
  count[given: box] = 0
bind
  [#won]
```
== Drawing ==
Tile definitions
```
match
  [#session-connect]
commit
  [@tiles player: "ðŸ‘·" box: "ðŸ“¦" wall: "â¬›" goal:"ðŸ•³"]
```
Draw the board
```
match
  [@tiles player box wall goal]
  [#cell x y not(#deleted)]
  tile = if [#player x y not(#deleted)] then player
         else if [#wall x y not(#deleted)] then wall
         else if [#box x y not(#deleted)] then box
         else if [#goal x y not(#deleted)] then goal
         else ""
  color = if [#goal x y not(#deleted)] then "cyan"
          else "white"
bind
  [#div sort: 1 style:
    [font-size: "24px"
     text-align: "center"]
    children:
      [#div sort: y children:
        [#div sort: x style: [color
                              line-height: "24px"
                              width: "24px"
                              height: "24px"
                              display: "inline-block"]
         text: tile]]]
```
```
match
  [#loading stage]
bind
  [#div text: "loading {{stage}}"]
```
 * "A winner is you"
 * Timer
 * Moves
 * Pushes
 * Level parsing
 * Use vectors
